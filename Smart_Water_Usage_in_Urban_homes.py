# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AIZcDcZiMnRjH9AViF31OXWIcexB1xpP
"""

import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score, mean_squared_error
# Load dataset
df = pd.read_csv("/Water_Consumption_And_Cost__2013_-_Feb_2025_.csv")

df['Service Start Date'] = pd.to_datetime(df['Service Start Date'], errors='coerce')
df['Service End Date'] = pd.to_datetime(df['Service End Date'], errors='coerce')
df['Revenue Month'] = pd.to_datetime(df['Revenue Month'], errors='coerce')

df[df['Consumption (HCF)'] > 0]  # avoid division by zero
df['Cost_per_HCF'] = df['Current Charges'] / df['Consumption (HCF)']
max_val = df['Consumption (HCF)'].quantile(0.95)
df = df[df['Consumption (HCF)'] <= max_val]

print(df[['Consumption (HCF)', 'Current Charges', 'Cost_per_HCF']].describe())

plt.figure(figsize=(10, 6))
sns.histplot(df['Consumption (HCF)'], kde=True, bins=50, color='skyblue')
plt.title('Distribution of Consumption (HCF)', fontsize=14)
plt.xlabel('Consumption (HCF)', fontsize=12)
plt.ylabel('Frequency', fontsize=12)
plt.grid(True)
plt.tight_layout()
plt.show()

borough_summary = df.groupby('Borough')[['Consumption (HCF)', 'Current Charges']].mean().sort_values(by='Consumption (HCF)', ascending=False)
print(borough_summary)

sns.boxplot(x='Borough', y='Consumption (HCF)', data=df)
plt.title('Borough-wise Consumption Distribution')
plt.xticks(rotation=45)
plt.show()

numeric_cols = ['# days', 'Consumption (HCF)', 'Current Charges', 'Cost_per_HCF']
sns.heatmap(df[numeric_cols].corr(), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Train the model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
r2 = r2_score(y_test, y_pred)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))

print(f"Model RÂ² Score: {r2:.4f}")
print(f"Root Mean Squared Error: {rmse:.2f}")

df.to_csv("Cleaned_Water_Consumption.csv", index=False)
from google.colab import files
files.download("Cleaned_Water_Consumption.csv")